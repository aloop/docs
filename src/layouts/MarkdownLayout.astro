---
import { getEntry } from "astro:content";
import getPath from "../util/path";
import dayjs from "dayjs";
import utc from "dayjs/plugin/utc";
import timezone from "dayjs/plugin/timezone";

import BaseLayout from "./BaseLayout.astro";
import TableOfContents from "../components/TableOfContents.astro";
import Tags from "../components/Tags.astro";
import Breadcrumbs from "../components/Breadcrumbs.astro";

const { frontmatter, headings } = Astro.props;

dayjs.extend(utc);
dayjs.extend(timezone);

const lastModified = dayjs(frontmatter.lastModified).tz("America/Los_Angeles");

const datetime = lastModified.format();
const displayedDate = lastModified.format("ddd, MMM DD, YYYY");

const path = getPath(Astro.request.url);
const category = path.slice(0, path.indexOf("/"));
const entries = [
  getEntry("documentation", category),
  getEntry("documentation", path),
];

const pathSegments = (await Promise.all(entries)).map((entry) => {
  return {
    title: entry.data.title,
    slug: entry.slug,
  };
});
---

<BaseLayout title={frontmatter.title}>
  <aside>
    <Breadcrumbs segments={pathSegments} />
    <Tags tags={frontmatter.tags} />
  </aside>
  <header>
    <small class="c-LastUpdated"
      >Last Modified: <time datetime={datetime}>{displayedDate}</time></small
    >
    <h1 class="c-Content-title">{frontmatter.title}</h1>
  </header>
  <aside>
    <TableOfContents headings={headings} />
  </aside>
  <slot />
</BaseLayout>

