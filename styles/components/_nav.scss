@use "../functions" as fns;
@use "../vars";

.c-Nav {
  position: relative;
  width: var(--nav-width);
  max-width: var(--nav-width);
  max-height: 100%;
  padding-right: var(--space);
  font-size: fns.rem(16);
  line-height: 1.2;
  outline: none;
  overflow-y: auto;
  -webkit-overflow-scrolling: touch;

  @media screen and (max-width: (vars.$nav-media-query-width - fns.rem(1))) {
    position: absolute;
    top: var(--nav-icon-full-size);
    right: 100%;
    max-height: calc(100% - var(--nav-icon-full-size));
    padding-top: var(--space);
    opacity: 0;
    visibility: hidden;
    transition: all var(--nav-transition-props);

    .c-NavContainer.is-open &,
    .no-js .c-NavContainer:focus-within & {
      transform: translateX(100%);
      opacity: 1;
      visibility: visible;
    }
  }
}

.c-Nav-wrapper {
  height: 100%;
  max-height: calc(
    100dvh - env(safe-area-inset-top, 0) - env(safe-area-inset-bottom, 0)
  );
  position: sticky;
  inset: 0;
}

.c-Nav-section {
  margin: calc(var(--space) * 1.5) 0;
}

.c-Nav-section-title {
  text-transform: uppercase;
  letter-spacing: 1px;
  font-weight: bold;
  font-size: fns.rem(14);
  margin-bottom: calc(var(--space) / 2);
  cursor: pointer;
}

.c-Nav-list {
  list-style-type: none;

  .c-Nav-list {
    padding-left: 0;
    margin-bottom: 0;
  }
}

.c-Nav-list-item {
  margin-bottom: calc(var(--space) / 3);

  &:last-of-type {
    margin-bottom: 0;
  }
}

.c-Nav-list-link {
  color: var(--nav-link-color);
  text-decoration: none;
  display: block;
  line-height: 1.4;

  &.is-current,
  &:hover,
  &:focus {
    color: var(--nav-link-color-active);
    text-decoration: underline;
    text-decoration-thickness: 2px;
    text-underline-position: under;
  }
}

.c-Nav-toggle {
  -webkit-appearance: none;
  border: none;
  background-color: transparent;
  cursor: pointer;
  display: flex;
  align-items: center;
  padding: var(--nav-icon-spacing);
  z-index: 10;
  width: var(--nav-icon-full-size);
  height: var(--nav-icon-full-size);
  transition: transform var(--nav-transition-props);

  .is-open &,
  .no-js .c-NavContainer:focus-within & {
    transform: translateX(calc(var(--space) - var(--nav-icon-spacing)));
  }

  .no-js .c-NavContainer:focus-within & {
    pointer-events: none;
  }

  @media screen and (min-width: vars.$nav-media-query-width) {
    display: none;
  }
}

.c-Nav-icon {
  --bar-gap: calc((var(--nav-icon-size) / 2 - #{fns.rem(2)}));

  &,
  &::before,
  &::after {
    position: absolute;
    content: "";
    width: var(--nav-icon-size);
    height: fns.rem(2);
    background-color: var(--nav-icon-color);
    border-radius: var(--nav-icon-size);
    transition: transform var(--nav-transition-props),
      background-color var(--nav-transition-props);
  }

  &::before {
    transform: translate(-50%, calc(var(--bar-gap) * -1));
  }

  &::after {
    transform: translate(-50%, var(--bar-gap));
  }

  .is-open &,
  .no-js .c-NavContainer:focus-within & {
    background-color: transparent;
  }

  .is-open &::before,
  .no-js .c-NavContainer:focus-within &::before {
    transform: translateX(-50%) rotate(225deg) scale(1.25);
  }

  .is-open &::after,
  .no-js .c-NavContainer:focus-within &::after {
    transform: translateX(-50%) rotate(-225deg) scale(1.25);
  }
}
